name: address-generator build
on: push
env:
  GOPRIVATE: github.com/core-coin/go-core,github.com\core-coin\go-core
  GO111MODULE: on
jobs:
  build:
    strategy:
      matrix:
        platform: [
          {os: ubuntu-latest, path: linux-x86_64},
          {os: windows-2019, path: windows-x86_64},
          {os: macos-latest, path: darwin-x86_64},
        ]
    runs-on: ${{ matrix.platform.os }}
    env:
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
    steps:
      - name: Setup
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: git config --global url."https://error2215:${TOKEN}@github.com/".insteadOf "https://github.com/"
      - name: Build
        run: |
          go get -v
          go build -o bin/address-generator main.go
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.path }}
          path: ./bin
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Version
        id: version
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: ${{ steps.version.outputs.tag }} address-generator release
          draft: false
          prerelease: true
  artifacts:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x86_64, windows-x86_64, darwin-x86_64]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.platform }}
          path: ./${{ matrix.platform }}
      - name: Zip
        run: zip ${{ matrix.platform }}.zip ${{ matrix.platform }}/* -j
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ matrix.platform }}.zip
          asset_name: ${{ matrix.platform }}.zip
          asset_content_type: application/zip
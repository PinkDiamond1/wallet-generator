name: wallet-generator build
on: push
jobs:
  build:
    strategy:
      matrix:
        platform: [
          {os: ubuntu-latest, path: linux-x86_64},
          {os: macos-latest, path: darwin-x86_64},
          {os: ubuntu-latest, path: windows-x86_64},
        ]
    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Setup
        uses: actions/setup-go@v1
        with:
          go-version: 1.16.x
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure github for private modules
        shell: bash
        env:
          TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: git config --global url."https://error2215:${TOKEN}@github.com/core-coin/go-core".insteadOf "https://github.com/core-coin/go-core"
      - name: Build for Mac and Linux
        if: matrix.platform.path == 'linux-x86_64' || matrix.platform.path == 'darwin-x86_64'
        run: |
          go build -o bin/wallet-generator main.go templates.go
      - name: Build for Windows
        if: matrix.platform.path == 'windows-x86_64'
        run: |
          sudo apt install gcc-mingw-w64 build-essential g++-mingw-w64-x86-64 -y
          GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-gcc go build -o bin/wallet-generator.exe -buildmode=exe main.go templates.go
          CGO_CFLAGS="-Wno-error" GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-g++ CXX=x86_64-w64-mingw32-g++ go build -o bin/wallet-generator2.exe -buildmode=exe main.go templates.go
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: wallet-generator-${{ matrix.platform.path }}
          path: ./bin
#  release:
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: build
#    runs-on: ubuntu-latest
#    outputs:
#      upload_url: ${{ steps.create_release.outputs.upload_url }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#      - name: Version
#        id: version
#        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
#      - name: Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
#        with:
#          tag_name: ${{ steps.version.outputs.tag }}
#          release_name: ${{ steps.version.outputs.tag }} wallet-generator release
#          draft: false
#          prerelease: true
  artifacts:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x86_64, darwin-x86_64, windows-x86_64]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Artifact
        uses: actions/download-artifact@v2
        with:
          name: wallet-generator-${{ matrix.platform }}
          path: ./wallet-generator-${{ matrix.platform }}
      - name: Zip
        run: zip wallet-generator-${{ matrix.platform }}.zip wallet-generator-${{ matrix.platform }}/* -j
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./wallet-generator-${{ matrix.platform }}.zip
          asset_name: wallet-generator-${{ matrix.platform }}.zip
          asset_content_type: application/zip